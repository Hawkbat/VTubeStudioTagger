{"version":3,"sources":["utils.ts","userData.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BufferedWebsocket","url","protocols","ws","_url","_protocols","bufferedSends","eventListeners","Map","reconnectHandle","reconnectTimeout","onopen","onmessage","onerror","onclose","this","performReconnect","v","protocol","readyState","binaryType","bufferedAmount","extensions","CLOSED","CLOSING","CONNECTING","OPEN","type","listener","options","listeners","get","push","set","addEventListener","index","findIndex","l","capture","splice","removeEventListener","event","dispatchEvent","code","reason","close","data","send","unshift","prev","next","WebSocket","reconnect","entries","ev","length","pop","e","console","error","clearTimeout","window","setTimeout","Math","min","max","getArtMeshToTagsMap","file","UserData","reduce","p","c","Id","Value","trim","split","buildUserDataFile","artMeshesToTags","Object","keys","artMesh","entry","Target","join","totalUserDataSize","Version","Meta","UserDataCount","TotalUserDataSize","TOKEN_KEY","FILTER_KEY","App","useState","vtsPort","setVtsPort","localStorage","getItem","filter","setFilter","connected","setConnected","setError","highlightColor","setHighlightColor","modelName","setModelName","artMeshes","setArtMeshes","tags","setTags","originalArtMeshMap","setOriginalArtMeshMap","setArtMeshesToTags","filterRef","useRef","useMemo","bus","WebSocketBus","client","ApiClient","initialToken","undefined","plugin","Plugin","token","setItem","useEffect","handle","setInterval","a","apiClient","currentModel","modelLoaded","live2DModelName","newModelName","substr","indexOf","artMeshList","artMeshNames","artMeshTags","clearInterval","key","current","focus","hasChanges","b","tag","includes","compare","uploadUserDataFile","JSON","text","userDataFile","parse","stringify","alert","exportUserDataFile","document","createElement","href","encodeURIComponent","download","hidden","body","append","click","pulseArtMeshTint","highlightColors","transparent","colorR","colorG","colorB","colorA","cyan","magenta","yellow","colorTint","artMeshMatcher","tintAll","nameExact","resetArtMeshTint","addTag","filteredArtMeshes","toLowerCase","sortedArtMeshes","sort","needsUserDataFile","className","value","onChange","target","valueAsNumber","files","onClick","ref","defaultValue","changeFilter","style","display","gridTemplateColumns","map","i","onMouseEnter","onMouseLeave","placeholder","onKeyDown","stopPropagation","HTMLInputElement","onBlur","t","last","obj","removeTag","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a8b461fe.chunk.js","sourcesContent":["\r\nexport class BufferedWebsocket implements WebSocket {\r\n    ws!: WebSocket\r\n\r\n    private _url: string\r\n    private _protocols: string | string[] | undefined\r\n    private bufferedSends: (string | ArrayBufferLike | Blob | ArrayBufferView)[] = []\r\n    private eventListeners: Map<string, { listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions }[]> = new Map()\r\n    private reconnectHandle: number | null = null\r\n    private reconnectTimeout = 0\r\n\r\n    get url() { return this._url }\r\n    set url(v: string) {\r\n        if (v !== this._url) {\r\n            this._url = v\r\n            this.performReconnect()\r\n        }\r\n    }\r\n\r\n    get protocol(): string { return this.ws.protocol }\r\n    get readyState(): number { return this.ws.readyState }\r\n\r\n    get binaryType(): BinaryType { return this.ws.binaryType }\r\n    set binaryType(binaryType: BinaryType) { this.ws.binaryType = binaryType }\r\n    get bufferedAmount(): number { return this.ws.bufferedAmount }\r\n    get extensions(): string { return this.ws.extensions }\r\n\r\n    get CLOSED(): number { return this.ws.CLOSED }\r\n    get CLOSING(): number { return this.ws.CLOSING }\r\n    get CONNECTING(): number { return this.ws.CONNECTING }\r\n    get OPEN(): number { return this.ws.OPEN }\r\n\r\n    constructor(url: string, protocols?: string | string[]) {\r\n        this._url = url\r\n        this._protocols = protocols\r\n        this.performReconnect()\r\n    }\r\n\r\n    onopen: ((this: WebSocket, ev: Event) => any) | null = null\r\n    onmessage: ((this: WebSocket, ev: MessageEvent<any>) => any) | null = null\r\n    onerror: ((this: WebSocket, ev: Event) => any) | null = null\r\n    onclose: ((this: WebSocket, ev: CloseEvent) => any) | null = null\r\n\r\n    addEventListener<K extends keyof WebSocketEventMap>(type: K, listener: (this: WebSocket, ev: WebSocketEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void\r\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void\r\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void {\r\n        const listeners = this.eventListeners.get(type) ?? []\r\n        listeners.push({ listener, options })\r\n        this.eventListeners.set(type, listeners)\r\n\r\n        // Don't bubble up close or error events in order to make reconnection 'seamless'\r\n        if (type !== 'close' && type !== 'error')\r\n            this.ws.addEventListener(type, listener, options)\r\n    }\r\n\r\n    removeEventListener<K extends keyof WebSocketEventMap>(type: K, listener: (this: WebSocket, ev: WebSocketEventMap[K]) => any, options?: boolean | EventListenerOptions): void\r\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void\r\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void {\r\n        const listeners = this.eventListeners.get(type) ?? []\r\n        const index = listeners.findIndex(l => l.listener === listener && (l.options === options || (typeof l.options === 'object' && typeof options === 'object' && l.options.capture === options.capture)))\r\n        if (index >= 0) listeners.splice(index, 1)\r\n        this.ws.removeEventListener(type, listener, options)\r\n    }\r\n\r\n    dispatchEvent(event: Event): boolean {\r\n        return this.ws.dispatchEvent(event)\r\n    }\r\n\r\n    close(code?: number, reason?: string): void {\r\n        this.ws.close(code, reason)\r\n    }\r\n\r\n    send(data: string | ArrayBufferLike | Blob | ArrayBufferView): void {\r\n        if (this.ws.readyState === this.ws.OPEN) {\r\n            this.ws.send(data)\r\n        } else {\r\n            this.bufferedSends.unshift(data)\r\n        }\r\n    }\r\n\r\n    private performReconnect() {\r\n        try {\r\n            const prev: WebSocket | undefined = this.ws\r\n            if (prev && prev.readyState === prev.OPEN) prev.close(3012, 'Reconnecting')\r\n\r\n            // Terrible hack to guarantee that the first websocket will always be instantiated successfully\r\n            const next = new WebSocket(prev ? this._url : 'wss://echo.websocket.org', this._protocols)\r\n\r\n            next.binaryType = prev?.binaryType ?? next.binaryType\r\n            next.onopen = prev?.onopen ?? next.onopen\r\n            next.onmessage = prev?.onmessage ?? next.onmessage\r\n            next.onerror = prev?.onerror ?? next.onerror\r\n            next.onclose = prev?.onclose ?? next.onclose\r\n\r\n            this.ws = next\r\n            if (!prev) this.reconnect()\r\n\r\n            for (const [type, listeners] of this.eventListeners.entries()) {\r\n                for (const listener of listeners) {\r\n                    if (prev) prev.removeEventListener(type, listener.listener, listener.options)\r\n                    next.addEventListener(type, listener.listener, listener.options)\r\n                }\r\n            }\r\n            next.addEventListener('open', ev => {\r\n                if (next !== this.ws) {\r\n                    next.close(3012, 'Reconnecting')\r\n                    return\r\n                }\r\n                this.reconnectTimeout = 0\r\n                this.onopen?.(ev)\r\n                while (this.bufferedSends.length) next.send(this.bufferedSends.pop()!)\r\n            })\r\n            next.addEventListener('message', ev => {\r\n                this.onmessage?.(ev)\r\n            })\r\n            next.addEventListener('error', ev => {\r\n                this.onerror?.(ev)\r\n            })\r\n            next.addEventListener('close', ev => {\r\n                this.onclose?.(ev)\r\n                if (next === this.ws) {\r\n                    this.reconnect()\r\n                }\r\n            })\r\n        } catch (e) {\r\n            console.error(e)\r\n            this.reconnect()\r\n        }\r\n    }\r\n\r\n    reconnect() {\r\n        if (this.reconnectHandle) {\r\n            clearTimeout(this.reconnectHandle)\r\n            this.reconnectHandle = null\r\n        }\r\n        this.reconnectHandle = window.setTimeout(() => this.performReconnect(), this.reconnectTimeout)\r\n        this.reconnectTimeout = Math.min(32000, Math.max(1000, this.reconnectTimeout) * 2)\r\n    }\r\n}\r\n","\r\nexport interface UserDataFile {\r\n    Version: 3\r\n    Meta: {\r\n        UserDataCount: number\r\n        TotalUserDataSize: number\r\n    }\r\n    UserData: {\r\n        Target: 'ArtMesh'\r\n        Id: string\r\n        Value: string\r\n    }[]\r\n}\r\n\r\ntype UserDataEntry = UserDataFile['UserData'][0]\r\n\r\nexport type ArtMeshToTagsMap = { [key: string]: string[] }\r\n\r\nexport function getArtMeshToTagsMap(file: UserDataFile): ArtMeshToTagsMap {\r\n    return file.UserData.reduce((p, c) => ({ ...p, [c.Id]: c.Value.trim().split(/\\s+/) }), {} as ArtMeshToTagsMap)\r\n}\r\n\r\nexport function buildUserDataFile(artMeshesToTags: ArtMeshToTagsMap): UserDataFile {\r\n    const artMeshes = Object.keys(artMeshesToTags)\r\n\r\n    const entries: UserDataEntry[] = []\r\n    for (const artMesh of artMeshes) {\r\n        const tags = artMeshesToTags[artMesh]\r\n\r\n        const entry: UserDataEntry = {\r\n            Target: 'ArtMesh',\r\n            Id: artMesh,\r\n            Value: tags.join(' '),\r\n        }\r\n        entries.push(entry)\r\n    }\r\n\r\n    const totalUserDataSize = entries.reduce((p, c) => p + c.Value.length, 0)\r\n\r\n    return {\r\n        Version: 3,\r\n        Meta: {\r\n            UserDataCount: entries.length,\r\n            TotalUserDataSize: totalUserDataSize,\r\n        },\r\n        UserData: entries,\r\n    }\r\n}\r\n","import React, { Fragment, useEffect, useMemo, useRef, useState } from 'react'\nimport './App.css'\nimport { ApiClient, Plugin, WebSocketBus } from 'vtubestudio'\nimport { BufferedWebsocket } from './utils'\nimport { ArtMeshToTagsMap, buildUserDataFile, getArtMeshToTagsMap, UserDataFile } from './userData'\n\nconst TOKEN_KEY = 'vtstudio-tagger-token'\nconst FILTER_KEY = 'vtstudio-tagger-filter'\n\nfunction App() {\n  const [vtsPort, setVtsPort] = useState(8001)\n  const [filter, setFilter] = useState(() => localStorage.getItem(FILTER_KEY) ?? '')\n\n  const [connected, setConnected] = useState(false)\n  const [error, setError] = useState('')\n  const [highlightColor, setHighlightColor] = useState('magenta')\n  const [modelName, setModelName] = useState<string>('')\n  const [artMeshes, setArtMeshes] = useState<string[] | null>(null)\n  const [tags, setTags] = useState<string[] | null>(null)\n  const [originalArtMeshMap, setOriginalArtMeshMap] = useState<ArtMeshToTagsMap | null>(null)\n  const [artMeshesToTags, setArtMeshesToTags] = useState<ArtMeshToTagsMap | null>(null)\n\n  const filterRef = useRef<HTMLInputElement>(null)\n\n  const { plugin, ws } = useMemo(() => {\n    const ws = new BufferedWebsocket(`ws://localhost:8001`)\n    const bus = new WebSocketBus(ws)\n    const client = new ApiClient(bus)\n    const initialToken = localStorage.getItem(TOKEN_KEY) ?? undefined\n    const plugin = new Plugin(client, 'ArtMesh Tagger', 'Hawkbar', undefined, initialToken, token => localStorage.setItem(TOKEN_KEY, token))\n    ws.addEventListener('open', () => setConnected(true))\n    ws.addEventListener('close', () => setConnected(false))\n\n    return { plugin, ws }\n  }, [])\n\n  useEffect(() => {\n    ws.url = `ws://localhost:${vtsPort}`\n  }, [ws, vtsPort])\n\n  useEffect(() => {\n    const handle = setInterval(async () => {\n      if (connected) {\n        try {\n          const { modelLoaded, live2DModelName } = await plugin.apiClient.currentModel()\n          if (modelLoaded) {\n            const newModelName = live2DModelName.substr(0, live2DModelName.indexOf('.model3.json'))\n            if (newModelName !== modelName) {\n              setOriginalArtMeshMap(null)\n              setArtMeshesToTags(null)\n            }\n            setModelName(newModelName)\n            const { artMeshNames, artMeshTags } = await plugin.apiClient.artMeshList()\n            setArtMeshes(artMeshNames)\n            setTags(artMeshTags)\n          } else {\n            setModelName('')\n            setArtMeshes([])\n            setTags([])\n          }\n        } catch (e) {\n          console.error(e)\n          setError('' + e)\n        }\n      }\n    }, 1000)\n    return () => clearInterval(handle)\n  }, [plugin, connected, modelName])\n\n  useEffect(() => {\n    const listener = (e: KeyboardEvent) => {\n      if (e.key.length === 1) {\n        if (filterRef.current) filterRef.current.focus()\n        setFilter(filter => filter + e.key)\n      } else if (e.key === 'Backspace') {\n        if (filterRef.current) filterRef.current.focus()\n        setFilter(filter => filter.substr(0, filter.length - 1))\n      }\n    }\n\n    window.addEventListener('keydown', listener)\n    return () => window.removeEventListener('keydown', listener)\n  }, [])\n\n  const hasChanges = useMemo(() => {\n    if (originalArtMeshMap === null && artMeshesToTags === null) return false\n    const compare = (a: ArtMeshToTagsMap, b: ArtMeshToTagsMap) => {\n      for (const key in a) {\n        if (!b[key]) return true\n        for (const tag of a[key]) {\n          if (!b[key].includes(tag)) return true\n        }\n      }\n      for (const key in b) {\n        if (!a[key]) return true\n        for (const tag of b[key]) {\n          if (!a[key].includes(tag)) return true\n        }\n      }\n      return false\n    }\n    return compare(originalArtMeshMap ?? {}, artMeshesToTags ?? {})\n  }, [originalArtMeshMap, artMeshesToTags])\n\n  useEffect(() => {\n    const listener = () => {\n      if (!hasChanges) return\n      return 'You have unsaved changes. You will need to download and place the userdata3.json file in your model folder to update the tags. Are you sure you want to leave without saving?'\n    }\n    window.addEventListener('beforeunload', listener)\n    return () => window.removeEventListener('beforeunload', listener)\n  }, [hasChanges])\n\n  const changeFilter = (filter: string) => {\n    localStorage.setItem(FILTER_KEY, filter)\n    setFilter(filter)\n  }\n\n  const uploadUserDataFile = async (file: File | null | undefined) => {\n    if (!file) return\n    try {\n      const userDataFile = JSON.parse(await file.text()) as UserDataFile\n      const artMeshesToTags = getArtMeshToTagsMap(userDataFile)\n      setArtMeshesToTags(artMeshesToTags)\n      setOriginalArtMeshMap(JSON.parse(JSON.stringify(artMeshesToTags)))\n    } catch (e) {\n      console.error(e)\n      alert('Could not process the uploaded UserData')\n    }\n  }\n\n  const exportUserDataFile = async () => {\n    const userDataFile = buildUserDataFile(artMeshesToTags ?? {})\n    const a = document.createElement('a')\n    a.href = 'data:application/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(userDataFile))\n    a.download = `${modelName}.userdata3.json`\n    a.hidden = true\n    document.body.append(a)\n    a.click()\n    setOriginalArtMeshMap(JSON.parse(JSON.stringify(artMeshesToTags)))\n  }\n\n  const pulseArtMeshTint = async (artMesh: string) => {\n    try {\n      const highlightColors: Record<string, { colorR: number, colorG: number, colorB: number, colorA: number }> = {\n        transparent: { colorR: 127, colorG: 127, colorB: 127, colorA: 191 },\n        cyan: { colorR: 0, colorG: 255, colorB: 255, colorA: 255 },\n        magenta: { colorR: 255, colorG: 0, colorB: 255, colorA: 255 },\n        yellow: { colorR: 255, colorG: 255, colorB: 0, colorA: 255 },\n      }\n      await plugin.apiClient.colorTint({ colorTint: highlightColors[highlightColor], artMeshMatcher: { tintAll: false, nameExact: [artMesh] } })\n    } catch (e) {\n      console.error(e)\n      setError('' + e)\n    }\n  }\n\n  const resetArtMeshTint = async (artMesh: string) => {\n    try {\n      await plugin.apiClient.colorTint({ colorTint: { colorR: 255, colorG: 255, colorB: 255, colorA: 255 }, artMeshMatcher: { tintAll: false, nameExact: [artMesh] } })\n    } catch (e) {\n      console.error(e)\n      setError('' + e)\n    }\n  }\n  const addTag = (artMesh: string, tag: string) => {\n    if (!tag || artMeshesToTags?.[artMesh]?.includes(tag)) return\n    setArtMeshesToTags({ ...artMeshesToTags, [artMesh]: [...(artMeshesToTags?.[artMesh] ?? []), tag] })\n  }\n\n  const removeTag = (artMesh: string, tag: string) => {\n    if (!tag || !artMeshesToTags || !artMeshesToTags[artMesh] || !artMeshesToTags[artMesh].includes(tag)) return\n    const last = artMeshesToTags[artMesh].length === 1\n    const obj = { ...artMeshesToTags }\n    if (last) delete obj[artMesh]\n    else obj[artMesh] = obj[artMesh].filter(t => t !== tag)\n    setArtMeshesToTags(obj)\n  }\n\n  const filteredArtMeshes = filter ? artMeshes?.filter(p => p.toLowerCase().includes(filter.toLowerCase())) ?? [] : artMeshes ?? []\n\n  const sortedArtMeshes = [...filteredArtMeshes].sort()\n\n  const needsUserDataFile = tags && tags.length > 0 && !artMeshesToTags\n\n  return (\n    <div className=\"App\">\n      {!connected ? <>\n        <label>VTube Studio API Port:&nbsp;<input type=\"number\" value={vtsPort} onChange={e => setVtsPort(e.target.valueAsNumber)} /></label>\n        <br />\n      </> : null}\n      {connected && !error ? <>\n        {needsUserDataFile ? <>\n          <div>The currently loaded model has existing tags but no UserData file has been loaded. Please select the model's userdata3.json file:</div>\n          <input type=\"file\" onChange={e => uploadUserDataFile(e.target.files?.[0])} />\n          <br />\n        </> : null}\n        {tags && !tags.length && !artMeshesToTags ? <>\n          <div>The currently loaded model has no existing tags. A new UserData file will be generated when you start adding tags, or you can upload your existing userdata3.json file:</div>\n          <input type=\"file\" onChange={e => uploadUserDataFile(e.target.files?.[0])} />\n          <br />\n        </> : null}\n        {hasChanges ? <>\n          <div>To save your changes, download the updated userdata3.json file and place it next to the model3.json file in your model's folder in VTube Studio:</div>\n          <button onClick={() => exportUserDataFile()}>Download userdata3.json</button>\n        </> : <>\n          <div>You have no unsaved changes.</div>\n        </>}\n        {artMeshes && artMeshes.length ? <>\n          <br />\n          <i>Note: Hovering over the art mesh names will highlight them in VTube Studio. Highlight color:&nbsp;<select value={highlightColor} onChange={e => setHighlightColor(e.target.value)}>\n            <option>transparent</option>\n            <option>cyan</option>\n            <option>magenta</option>\n            <option>yellow</option>\n          </select></i>\n        </> : null}\n        <h3>{modelName}</h3>\n        <label>Filter:&nbsp;<input ref={filterRef} type=\"text\" defaultValue={filter} onChange={e => changeFilter(e.target.value)} /></label>\n        <br />\n      </> : null}\n      {connected && !error ? <div style={{ display: 'grid', gridTemplateColumns: 'auto 1fr' }}>\n        <label>ArtMesh Name</label>\n        <label>Tags</label>\n        {sortedArtMeshes ? sortedArtMeshes.map((artMesh, i) => <Fragment key={artMesh + i}>\n          <div className=\"artmeshName\" onMouseEnter={() => pulseArtMeshTint(artMesh)} onMouseLeave={() => resetArtMeshTint(artMesh)}>{artMesh}</div>\n          <div className=\"artmeshTags\" onMouseEnter={() => pulseArtMeshTint(artMesh)} onMouseLeave={() => resetArtMeshTint(artMesh)}>\n            {!needsUserDataFile ? <input type=\"text\" placeholder=\"New tag...\"\n              onKeyDown={e => {\n                e.stopPropagation()\n                if (e.key === 'Enter' && e.target instanceof HTMLInputElement) {\n                  addTag(artMesh, e.target.value)\n                  e.target.value = ''\n                }\n              }}\n              onBlur={e => {\n                addTag(artMesh, e.target.value)\n                e.target.value = ''\n              }} /> : null}\n            {artMeshesToTags?.[artMesh]?.map(t => <div key={t} className=\"tag\" onClick={() => removeTag(artMesh, t)}><span>{t}</span><div>&times;</div></div>)}\n          </div>\n        </Fragment>) : <i>No model is currently loaded. Load a model to view the list of artmeshes and tags.</i>}\n      </div> : <i title={error}>Not connected to VTube Studio. Ensure that you are running the latest version of VTube Studio on the same device as this webpage and that the port matches in the settings.</i>\n      }\n      <i>If you are experiencing connection issues with VTube Studio, try refreshing the page.</i>\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}